@model Green.Models.AppointmentModel
@{
    ViewBag.Title = "Create";
}
<h2>Create</h2>

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Appointment</h4>
                <hr />
                @Html.ValidationSummary(true)
                <div class="form-group">
                    @Html.LabelFor(model => model.UserID, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Label(User.Identity.Name, User.Identity.Name)
                        @Html.HiddenFor(model => model.UserID)
                        @Html.ValidationMessageFor(model => model.UserID)
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Doctor's Name", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Label((string)ViewBag.DoctorName, new { @class = "control-label col-md-2" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date)
                        @Html.ValidationMessageFor(model => model.Date)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Time, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TimeBlockHelper")
                        @Html.ValidationMessageFor(model => model.Time)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProcedurID, "ProcedurID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProcedurID", ViewBag.Prod as SelectList, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProcedurID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
    @*<div class="col-md-6">
        <div class="col-md-6">
            @if (ViewBag.Picture == null)
            {
                <img src="@Url.Content("~/images/user.jpg")" alt="Placeholder" style="width: 200px; height: 200px" />
            }
            else
            {
                <img src="data:image/png;base64,@Convert.ToBase64String(ViewBag.Picture, 0, ViewBag.Picture.Length)" style="width: 400px; height: 400px" alt="" />
            }


        </div>
        </div>*@
</div>

<div>
    @*Use the browser's internal history. Otherwise Redirectin to all Appointments*@
    <a href="javascript:void(0);" onclick="history.go(-1);">Go Back</a>
</div>


<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $('#TimeBlockHelper').append($("<option></option>").val("placeholder").text("Select Date"));
            $('#TimeBlockHelper').val("placeholder");
            $("#TimeBlockHelper").prop("disabled", true);
            $("#Date").change(function () {
                if ($("#Date").val() != "") {
                    var options = {};
                    options.url = "/Appointment/GetAvailableAppointments";
                    options.type = "POST";
                    options.data = JSON.stringify({ docID: '@Model.DoctorID', Date: $("#Date").val() });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (data) {
                        data = $.map(data, function (item, a) {
                            return "<option value=" + item.Value + ">" + item.Text + "</option>";
                        });

                        $("#TimeBlockHelper").html(data.join(""));
                        $("#TimeBlockHelper").prop("disabled", false);
                    };
                    options.error = function () { alert("Error retrieving available appointments!"); };
                    $.ajax(options);
                }
                else {
                    $("#TimeBlockHelper").empty();
                    $('#TimeBlockHelper').append($("<option></option>").val("placeholder").text("Select Date"));
                    $('#TimeBlockHelper').val("placeholder");
                    $("#TimeBlockHelper").prop("disabled", true);
                }
            });
        });
    </script>
}


